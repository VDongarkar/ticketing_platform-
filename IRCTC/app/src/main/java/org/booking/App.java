/*
 * This source file was generated by the Gradle 'init' task
 */
package org.booking;

import org.booking.Util.UserServiceUtil;
import org.booking.entities.Train;
import org.booking.entities.User;
import org.booking.services.UserBookingService;

import java.io.IOException;
import java.util.*;
import java.util.Map.Entry;

public class App {


    public static void main(String[] args) {
        System.out.println("Running Train Booking system :");
        Scanner sc = new Scanner(System.in);
        int option = 0;
        UserBookingService userBookingService;
        try{
            userBookingService = new UserBookingService();
        }catch(IOException ex){
            System.out.println("There is something wrong");
            return;
        }
        while(option != 7){
            System.out.println("Choose an option: ");
            System.out.println("1.Sign up:");
            System.out.println("2.Login ");
            System.out.println("3.Fetch Booking");
            System.out.println("4.Search Trains:");
            System.out.println("5.Book a Seat:");
            System.out.println("6.Cancel my booking");
            System.out.println("7.Exit the App ");
            option = sc.nextInt();
            Train trainSelectedForBooking = new Train();
            switch(option){
                case 1:
                    System.out.println("Enter your name for signup");
                    String nameToSignup = sc.next();
                    System.out.println("Enter the password for signing up :");
                    String passwordSignup = sc.next();
                    /// we need to create a user as the direct variables constructor is not present so we need to create a user and hence that will get us the user
                    User userToSignup = new User(nameToSignup,passwordSignup, UserServiceUtil.hashPassword(passwordSignup),new ArrayList<>(), UUID.randomUUID().toString());

                    userBookingService.signUp(userToSignup);
                    break;
                case 2:
                    System.out.println("Enter the username for login?");
                    String nameToLogin = sc.next();
                    System.out.println("Enter the password for login");
                    String passwordToLogin = sc.next();
                    User userToLogin = new User(nameToLogin,passwordToLogin,UserServiceUtil.hashPassword(passwordToLogin),new ArrayList<>(),UUID.randomUUID().toString());
                    try{
                        userBookingService = new UserBookingService(userToLogin);

                    }catch(IOException ex){
                        return;
                    }
                    break;
                case 3:
                    System.out.println("Fetching your bookings: ");
                    userBookingService.fetchBooking();
                    break;
                case 4:
                    System.out.println("Enter the source station name:");
                    String source = sc.next();
                    System.out.println("Enter the destination name:");
                    String destination = sc.next();
                    List<Train> trains = userBookingService.getTrains(source,destination);
                    int index = 1;
                    for (Train t : trains){
                        System.out.println(index + "Train id" + t.getTrainId());
                        for(Map.Entry<String, String> entry: t.getStationTimes().entrySet()){
                            System.out.println("Station" + entry.getKey()+"Time: " + entry.getValue());
                        }
                    }
                    System.out.println("Select a train by typing 1,2,3..");
                    trainSelectedForBooking = trains.get(sc.nextInt());
                    break;
                case 5:
                    System.out.println("Select a seat out of these seats");
                    List<List<Integer>> seats = userBookingService.fetchSeats(trainSelectedForBooking);
                    for (List<Integer> row: seats){
                        for (Integer val: row){
                            System.out.print(val+" ");
                        }
                        System.out.println();
                    }
                    System.out.println("Select the seat by typing the row and column");
                    System.out.println("Enter the row");
                    int row = sc.nextInt();
                    System.out.println("Enter the column");
                    int col = sc.nextInt();
                    System.out.println("Booking your seat....");
                    Boolean booked = userBookingService.bookTrainSeat(trainSelectedForBooking, row, col);
                    if(booked.equals(Boolean.TRUE)){
                        System.out.println("Booked! Enjoy your journey");
                    }else{
                        System.out.println("Can't book this seat");
                    }
                    break;
                default:
                    break;
            }
        }
    }
}
